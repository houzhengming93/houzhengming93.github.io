<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>jiayi</title>
    <url>/2020/04/09/jiayi/</url>
    <content><![CDATA[<p>1123123123</p>
]]></content>
  </entry>
  <entry>
    <title>datalist</title>
    <url>/2020/04/08/datalist/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">    输入你喜欢的编程语言:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"lang"</span> <span class="attr">list</span>=<span class="string">"data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">"data"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"java"</span>&gt;</span>java大法好<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"javaScript"</span>&gt;</span>javaScript更牛叉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"c"</span>&gt;</span>c比较难<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"c#"</span>&gt;</span>微软的贼船不要上<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"c++"</span>&gt;</span>比c还难<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>NewSpan</title>
    <url>/2020/04/08/NewSpan/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Span a = tracer.nextSpan().name(<span class="string">"a"</span>);</span><br><span class="line">a.start().finish();;</span><br><span class="line">tracer.withSpanInScope(a);</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>查询导致的BUG</title>
    <url>/2020/03/25/%E6%9F%A5%E8%AF%A2%E5%AF%BC%E8%87%B4%E7%9A%84BUG/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Client创建失败</title>
    <url>/2020/03/24/Client%E5%88%9B%E5%BB%BA%E5%A4%B1%E8%B4%A5/</url>
    <content><![CDATA[<h2 id="Feign-Client-导致的启动失败"><a href="#Feign-Client-导致的启动失败" class="headerlink" title="Feign Client 导致的启动失败"></a>Feign Client 导致的启动失败</h2><h3 id="故障现象"><a href="#故障现象" class="headerlink" title="故障现象"></a>故障现象</h3><p>今天一位同事写了一个FeignClient接口，引用后应用启动失败</p>
<p>错误日志信息：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name <span class="string">'com.dffl.mall.warehouse.client.rest.WarehouseExpressRelationshipClient'</span>: FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: Method has too many Body parameters: <span class="keyword">public</span> <span class="keyword">abstract</span> com.dffl.bl.common.response.Response com.dffl.mall.warehouse.contract.WarehouseExpressRelationshipContract.findByWarehouseExpressCode(java.lang.String,java.lang.String)</span><br><span class="line">	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:<span class="number">178</span>) ~[spring-beans-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:<span class="number">101</span>) ~[spring-beans-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:<span class="number">1645</span>) ~[spring-beans-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getObjectForBeanInstance(AbstractAutowireCapableBeanFactory.java:<span class="number">1175</span>) ~[spring-beans-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:<span class="number">257</span>) ~[spring-beans-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:<span class="number">199</span>) ~[spring-beans-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:<span class="number">251</span>) ~[spring-beans-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:<span class="number">1322</span>) ~[spring-beans-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:<span class="number">1288</span>) ~[spring-beans-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:<span class="number">1098</span>) ~[spring-beans-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:<span class="number">1062</span>) ~[spring-beans-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:<span class="number">507</span>) ~[spring-context-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:<span class="number">485</span>) ~[spring-context-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:<span class="number">619</span>) ~[spring-context-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:<span class="number">180</span>) ~[spring-beans-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:<span class="number">90</span>) ~[spring-beans-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:<span class="number">318</span>) ~[spring-context-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	... <span class="number">19</span> common frames omitted</span><br><span class="line">Caused by: java.lang.IllegalStateException: Method has too many Body parameters: <span class="keyword">public</span> <span class="keyword">abstract</span> com.dffl.bl.common.response.Response com.dffl.mall.warehouse.contract.WarehouseExpressRelationshipContract.findByWarehouseExpressCode(java.lang.String,java.lang.String)</span><br><span class="line">	at feign.Util.checkState(Util.java:<span class="number">128</span>) ~[feign-core-<span class="number">9.5</span><span class="number">.1</span>.jar:na]</span><br><span class="line">	at feign.Contract$BaseContract.parseAndValidateMetadata(Contract.java:<span class="number">117</span>) ~[feign-core-<span class="number">9.5</span><span class="number">.1</span>.jar:na]</span><br><span class="line">	at org.springframework.cloud.openfeign.support.SpringMvcContract.parseAndValidateMetadata(SpringMvcContract.java:<span class="number">133</span>) ~[spring-cloud-openfeign-core-<span class="number">2.0</span><span class="number">.1</span>.RELEASE.jar:<span class="number">2.0</span><span class="number">.1</span>.RELEASE]</span><br><span class="line">	at feign.Contract$BaseContract.parseAndValidatateMetadata(Contract.java:<span class="number">66</span>) ~[feign-core-<span class="number">9.5</span><span class="number">.1</span>.jar:na]</span><br><span class="line">	at feign.ReflectiveFeign$ParseHandlersByName.apply(ReflectiveFeign.java:<span class="number">146</span>) ~[feign-core-<span class="number">9.5</span><span class="number">.1</span>.jar:na]</span><br><span class="line">	at feign.ReflectiveFeign.newInstance(ReflectiveFeign.java:<span class="number">53</span>) ~[feign-core-<span class="number">9.5</span><span class="number">.1</span>.jar:na]</span><br><span class="line">	at feign.Feign$Builder.target(Feign.java:<span class="number">218</span>) ~[feign-core-<span class="number">9.5</span><span class="number">.1</span>.jar:na]</span><br><span class="line">	at org.springframework.cloud.openfeign.HystrixTargeter.target(HystrixTargeter.java:<span class="number">39</span>) ~[spring-cloud-openfeign-core-<span class="number">2.0</span><span class="number">.1</span>.RELEASE.jar:<span class="number">2.0</span><span class="number">.1</span>.RELEASE]</span><br><span class="line">	at org.springframework.cloud.openfeign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:<span class="number">223</span>) ~[spring-cloud-openfeign-core-<span class="number">2.0</span><span class="number">.1</span>.RELEASE.jar:<span class="number">2.0</span><span class="number">.1</span>.RELEASE]</span><br><span class="line">	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:<span class="number">244</span>) ~[spring-cloud-openfeign-core-<span class="number">2.0</span><span class="number">.1</span>.RELEASE.jar:<span class="number">2.0</span><span class="number">.1</span>.RELEASE]</span><br><span class="line">	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:<span class="number">171</span>) ~[spring-beans-<span class="number">5.0</span><span class="number">.9</span>.RELEASE.jar:<span class="number">5.0</span><span class="number">.9</span>.RELEASE]</span><br><span class="line">	... <span class="number">35</span> common frames omitted</span><br><span class="line"></span><br><span class="line">Disconnected from the target VM, address: <span class="string">'127.0.0.1:57677'</span>, transport: <span class="string">'socket'</span></span><br></pre></td></tr></table></figure>

<h3 id="导致原因"><a href="#导致原因" class="headerlink" title="导致原因"></a>导致原因</h3><p>在定义Client接口是直接使用了两个String接收数据</p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h3 id="优化建议"><a href="#优化建议" class="headerlink" title="优化建议"></a>优化建议</h3>]]></content>
      <tags>
        <tag>SpringCloud 错误日志</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot对响应的时间格式的处理</title>
    <url>/2020/03/24/SpringBoot%E5%AF%B9%E5%93%8D%E5%BA%94%E7%9A%84%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E7%9A%84%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h2 id="后端接口响应时候全局处理"><a href="#后端接口响应时候全局处理" class="headerlink" title="后端接口响应时候全局处理"></a>后端接口响应时候全局处理</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br></pre></td></tr></table></figure>



<h2 id="JS-function处理时间格式"><a href="#JS-function处理时间格式" class="headerlink" title="JS function处理时间格式"></a>JS function处理时间格式</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//自定义转化函数</span></span><br><span class="line"><span class="built_in">Date</span>.prototype.Format = <span class="function"><span class="keyword">function</span> (<span class="params">fmt</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> o = &#123;</span><br><span class="line">        <span class="string">"M+"</span>: <span class="keyword">this</span>.getMonth() + <span class="number">1</span>, <span class="comment">//月份</span></span><br><span class="line">        <span class="string">"d+"</span>: <span class="keyword">this</span>.getDate(), <span class="comment">//日</span></span><br><span class="line">        <span class="string">"h+"</span>: <span class="keyword">this</span>.getHours(), <span class="comment">//小时</span></span><br><span class="line">        <span class="string">"m+"</span>: <span class="keyword">this</span>.getMinutes(), <span class="comment">//分</span></span><br><span class="line">        <span class="string">"s+"</span>: <span class="keyword">this</span>.getSeconds(), <span class="comment">//秒</span></span><br><span class="line">        <span class="string">"q+"</span>: <span class="built_in">Math</span>.floor((<span class="keyword">this</span>.getMonth() + <span class="number">3</span>) / <span class="number">3</span>), <span class="comment">//季度</span></span><br><span class="line">        <span class="string">"S"</span>: <span class="keyword">this</span>.getMilliseconds() <span class="comment">//毫秒</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/(y+)/</span>.test(fmt)) fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="keyword">this</span>.getFullYear() + <span class="string">""</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> k <span class="keyword">in</span> o)</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"("</span> + k + <span class="string">")"</span>).test(fmt)) fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="built_in">RegExp</span>.$<span class="number">1.</span>length == <span class="number">1</span>) ? (o[k]) : ((<span class="string">"00"</span> + o[k]).substr((<span class="string">""</span> + o[k]).length)));</span><br><span class="line">    <span class="keyword">return</span> fmt;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试代码</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Date</span>().Format(<span class="string">"yyyyMMdd"</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Date</span>().Format(<span class="string">"yyyy-MM-dd hh:mm:ss"</span>));</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>spring条件判断</title>
    <url>/2020/03/23/spring%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/</url>
    <content><![CDATA[<h1 id="Spring-条件判断"><a href="#Spring-条件判断" class="headerlink" title="Spring 条件判断"></a>Spring 条件判断</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dffl.warehouse.billing.config.datasource.druid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.support.http.StatViewServlet;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.support.http.WebStatFilter;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.FilterRegistrationBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.ServletRegistrationBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> ServletRegistrationBean <span class="title">druidServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		ServletRegistrationBean bean = <span class="keyword">new</span> ServletRegistrationBean(<span class="keyword">new</span> StatViewServlet(), <span class="string">"/druid/*"</span>);</span><br><span class="line"><span class="comment">//		bean.addInitParameter("allow", "127.0.0.1");</span></span><br><span class="line">		bean.addInitParameter(<span class="string">"resetEnable"</span>, <span class="string">"false"</span>);</span><br><span class="line">		bean.addInitParameter(<span class="string">"loginUsername"</span>, <span class="string">"admin"</span>);</span><br><span class="line">		bean.addInitParameter(<span class="string">"loginPassword"</span>, <span class="string">"987654"</span>);</span><br><span class="line">		<span class="keyword">return</span> bean;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> FilterRegistrationBean <span class="title">statFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		FilterRegistrationBean bean = <span class="keyword">new</span> FilterRegistrationBean(<span class="keyword">new</span> WebStatFilter());</span><br><span class="line">		bean.addUrlPatterns(<span class="string">"/*"</span>);</span><br><span class="line">		bean.addInitParameter(<span class="string">"exclusions"</span>, <span class="string">"*.js,*.gif,/druid/*"</span>);</span><br><span class="line">		<span class="keyword">return</span> bean;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
</search>
